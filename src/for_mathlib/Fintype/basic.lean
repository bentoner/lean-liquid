import category_theory.Fintype
import topology.category.Profinite

namespace Fintype

-- The next two lemmas can be dropped after mathlib PR #7530 hits

@[simp]
lemma id_to_fun {A : Fintype} : (ùüô A : A ‚Üí A) = id := rfl

@[simp]
lemma comp_to_fun {A B C : Fintype} (f : A ‚ü∂ B) (g : B ‚ü∂ C) :
  (f ‚â´ g : A ‚Üí C) = g ‚àò f := rfl

-- NOTE: Fintypes are given the discrete topology!
instance {A : Fintype} : topological_space A := ‚ä•

end Fintype

/-- The canonical functor from `Fintype` to `Profinite`. -/
def Fintype_to_Profinite : Fintype ‚•§ Profinite :=
{ obj := Œª A, ‚ü®‚ü®A‚ü©‚ü©,
  map := Œª A B f, ‚ü®f‚ü© }
